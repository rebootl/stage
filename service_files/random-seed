# stage init - service file
#
# carry the random seed across start-ups

start() {
    random_seed=/var/cache/random/random-seed
    # Carry a random seed from start-up to start-up
    # Load and then save the whole entropy pool
    [ ! -d $(dirname $random_seed) ] && mkdir $(dirname $random_seed)
    if [ -f $random_seed ]; then
        cat $random_seed >/dev/urandom
    else
        touch $random_seed
    fi
    chmod 600 $random_seed
    poolfile=/proc/sys/kernel/random/poolsize
    [ -r $poolfile ] && bytes=`cat $poolfile` || bytes=512
    dd if=/dev/urandom of=$random_seed count=1 bs=$bytes
}

stop() {
    # Carry a random seed from shut-down to start-up
    # Save the whole entropy pool
    [ ! -d $(dirname $random_seed) ] && mkdir $(dirname $random_seed)
    random_seed=/var/cache/random/random-seed
    touch $random_seed
    chmod 600 $random_seed
    poolfile=/proc/sys/kernel/random/poolsize
    [ -r $poolfile ] && bytes=`cat $poolfile` || bytes=512
    dd if=/dev/urandom of=$random_seed count=1 bs=$bytes
}

poll() {
    # return > 1 --> execute regardless of state
    return 2
}
